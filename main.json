{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "5553479886601782314"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      },
      "allowedValues": [
        "password",
        "sshPublicKey"
      ]
    },
    "adminPasswordOrKey": {
      "type": "secureString",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    },
    "virtualNetwork": {
      "type": "object",
      "metadata": {
        "description": "virtualNetwork properties from VirtualNetworkCombo"
      }
    },
    "VMSizeSettings": {
      "type": "object",
      "defaultValue": {
        "cclear": "Standard_D4s_v3",
        "cvu": "Standard_D4s_v3",
        "cstor": "Standard_D4s_v3"
      },
      "metadata": {
        "description": "defualt values for cclear VM"
      }
    },
    "cClearVmName": {
      "type": "string",
      "metadata": {
        "description": "cClear VM Name"
      }
    },
    "cClearImage": {
      "type": "object",
      "metadata": {
        "description": "cClear Image URI"
      }
    },
    "cClearVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "cClear Image Version"
      }
    },
    "cvuVmName": {
      "type": "string",
      "metadata": {
        "description": "cVu Base VM Name"
      }
    },
    "cvuImage": {
      "type": "object",
      "metadata": {
        "description": "cvu Image URI"
      }
    },
    "cvuVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "cvu Image Version"
      }
    },
    "cstorVmName": {
      "type": "string",
      "metadata": {
        "description": "cStor VM Name"
      }
    },
    "cstorImage": {
      "type": "object",
      "metadata": {
        "description": "cstor Image URI"
      }
    },
    "cstorVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "cstor Image Version"
      }
    },
    "cvulbName": {
      "type": "string",
      "defaultValue": "cvu_mon_lb",
      "metadata": {
        "description": "cvu load balancer name"
      }
    },
    "tagsByResource": {
      "type": "object",
      "metadata": {
        "description": "tags from TagsByResource"
      }
    }
  },
  "functions": [],
  "variables": {
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "mgmtsubnetId": "[if(equals(parameters('virtualNetwork').newOrExisting, 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.mgmtSubnet.name), resourceId(parameters('virtualNetwork').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.mgmtSubnet.name))]",
    "monsubnetId": "[if(equals(parameters('virtualNetwork').newOrExisting, 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.monSubnet.name), resourceId(parameters('virtualNetwork').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.monSubnet.name))]",
    "cstorsubnetId": "[if(equals(parameters('virtualNetwork').newOrExisting, 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.cstorSubnet.name), resourceId(parameters('virtualNetwork').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.cstorSubnet.name))]",
    "cclearImageURI": "[if(empty(parameters('cClearVersion')), parameters('cClearImage').id, format('{0}/versions/{1}', parameters('cClearImage').id, parameters('cClearVersion')))]",
    "cstorImageURI": "[if(empty(parameters('cstorVersion')), parameters('cstorImage').id, format('{0}/versions/{1}', parameters('cstorImage').id, parameters('cstorVersion')))]",
    "cvuImageURI": "[if(empty(parameters('cvuVersion')), parameters('cvuImage').id, format('{0}/versions/{1}', parameters('cvuImage').id, parameters('cvuVersion')))]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('virtualNetwork').newOrExisting, 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetwork').name]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('virtualNetwork').addressPrefixes]"
        }
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], null())]"
    },
    {
      "condition": "[equals(parameters('virtualNetwork').newOrExisting, 'new')]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.mgmtSubnet.name)]",
      "properties": {
        "addressPrefix": "[parameters('virtualNetwork').subnets.mgmtSubnet.addressPrefix]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork').name)]"
      ]
    },
    {
      "condition": "[equals(parameters('virtualNetwork').newOrExisting, 'new')]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.monSubnet.name)]",
      "properties": {
        "addressPrefix": "[parameters('virtualNetwork').subnets.monSubnet.addressPrefix]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork').name)]"
      ]
    },
    {
      "condition": "[equals(parameters('virtualNetwork').newOrExisting, 'new')]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.cstorSubnet.name)]",
      "properties": {
        "addressPrefix": "[parameters('virtualNetwork').subnets.cstorSubnet.addressPrefix]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork').name)]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-nic', parameters('cClearVmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('{0}-ipconfig-nic', parameters('cClearVmName'))]",
            "properties": {
              "subnet": {
                "id": "[variables('mgmtsubnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.mgmtSubnet.name)]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('cClearVmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSizeSettings').cclear]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "[variables('cclearImageURI')]"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "name": "[format('{0}-DataDisk1', parameters('cClearVmName'))]",
              "lun": 1,
              "createOption": "Empty",
              "diskSizeGB": 500,
              "caching": "ReadWrite"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('cClearVmName')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('cClearVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        }
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), parameters('tagsByResource')['Microsoft.Compute/virtualMachines'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('cClearVmName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-mgmt-nic', parameters('cstorVmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('{0}-mgmt-ipconfig-nic', parameters('cstorVmName'))]",
            "properties": {
              "subnet": {
                "id": "[variables('mgmtsubnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.mgmtSubnet.name)]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-capture-nic', parameters('cstorVmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('{0}-capture-ipconfig-nic', parameters('cstorVmName'))]",
            "properties": {
              "subnet": {
                "id": "[variables('cstorsubnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.cstorSubnet.name)]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('cstorVmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSizeSettings').cstor]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "[variables('cstorImageURI')]"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "name": "[format('{0}-DataDisk0', parameters('cstorVmName'))]",
              "lun": 0,
              "createOption": "Empty",
              "diskSizeGB": 500,
              "caching": "ReadWrite"
            },
            {
              "name": "[format('{0}-DataDisk1', parameters('cstorVmName'))]",
              "lun": 1,
              "createOption": "Empty",
              "diskSizeGB": 500,
              "caching": "ReadWrite"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-mgmt-nic', parameters('cstorVmName')))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-capture-nic', parameters('cstorVmName')))]",
              "properties": {
                "primary": false
              }
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('cstorVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        }
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), parameters('tagsByResource')['Microsoft.Compute/virtualMachines'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-capture-nic', parameters('cstorVmName')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-mgmt-nic', parameters('cstorVmName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-01-mon-nic', parameters('cvuVmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[format('{0}-01-mon-ipconfig-nic', parameters('cvuVmName'))]",
            "properties": {
              "subnet": {
                "id": "[variables('monsubnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('cvulbName'), format('{0}-backend', parameters('cvulbName')))]"
                }
              ]
            }
          }
        ],
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": true
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.monSubnet.name)]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-01', parameters('cvuVmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSizeSettings').cvu]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "[variables('cvuImageURI')]"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "name": "[format('{0}-01-DataDisk0', parameters('cvuVmName'))]",
              "lun": 0,
              "createOption": "Empty",
              "diskSizeGB": 500,
              "caching": "ReadWrite"
            },
            {
              "name": "[format('{0}-01-DataDisk1', parameters('cvuVmName'))]",
              "lun": 1,
              "createOption": "Empty",
              "diskSizeGB": 500,
              "caching": "ReadWrite"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-01-mon-nic', parameters('cvuVmName')))]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "osProfile": {
          "computerName": "[format('{0}-01', parameters('cvuVmName'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        }
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), parameters('tagsByResource')['Microsoft.Compute/virtualMachines'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-01-mon-nic', parameters('cvuVmName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-03-01",
      "name": "[parameters('cvulbName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[format('{0}-frontend', parameters('cvulbName'))]",
            "properties": {
              "subnet": {
                "id": "[variables('monsubnetId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[format('{0}-backend', parameters('cvulbName'))]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[format('{0}-to_server', parameters('cvulbName'))]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('cvulbName'), format('{0}-frontend', parameters('cvulbName')))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('cvulbName'), format('{0}-backend', parameters('cvulbName')))]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('cvulbName'), format('{0}-probe', parameters('cvulbName')))]"
              },
              "frontendPort": 0,
              "backendPort": 0,
              "protocol": "All"
            }
          }
        ],
        "probes": [
          {
            "name": "[format('{0}-probe', parameters('cvulbName'))]",
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "tags": "[if(contains(parameters('tagsByResource'), 'Microsoft.Network/loadBalancers'), parameters('tagsByResource')['Microsoft.Network/loadBalancers'], null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets.monSubnet.name)]"
      ]
    }
  ]
}